version: '3'

vars:
  # general
  GOBIN: "$(pwd)/bin"

  # docker
  VERSION: "latest"

  DOCKER_IMAGE: "escalopa/raft-kv"

tasks:
  run:
    cmds:
      - go run ./cmd/raft-kv/. --config .catalystgo/config-local.yml

  ui:
    cmds:
      - go run ./cmd/ui/main.go
    silent: true

  mock:
    cmds:
      - "{{.GOBIN}}/mockgen -source=./internal/mock/mock.go -destination=./internal/mock/mock.go -package=mock"

  format:
    cmds:
      - task: go_files
        vars: { COMMAND: "gofmt -w  {} +"}
      - task: go_files
        vars: { COMMAND: "{{.GOBIN}}/goimports -w  {} +"}

  test:
    cmds:
      - go test -v -cover -json -coverprofile=coverage.out
        $(go list ./... | grep -Ewv "(mock$|cmd$)") | {{.GOBIN}}/gotestfmt

  lint:
    cmds:
      - "{{.GOBIN}}/revive
        -config revive.toml
        -formatter friendly
        -exclude ./mock
        -exclude ./internal/pb
        -exclude vendor.proto
        ./..."

  pre-commit:
    desc: "Run all pre-commit tasks"
    cmds:
      - task: format
      - task: lint
      - task: test

# proto & deps

  generate:
    cmds:
      # generate
      - "{{.GOBIN}}/buf generate --template buf.gen.vendor.yaml || true" # ignore error on vendor generation (because it might be empty)
      - "{{.GOBIN}}/buf generate --template buf.gen.yaml"
      - "{{.GOBIN}}/catalystgo implement --input pkg --output internal/api"
      - go mod tidy
    deps:
      - vendor

  vendor:
    cmds:
      - "{{.GOBIN}}/protosync init"
      - "{{.GOBIN}}/protosync vendor --file protosync.yml"
    deps:
      - deps

  deps:
    cmds:
      # grpc
      - GOBIN={{.GOBIN}} go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@v2.16.0
      - GOBIN={{.GOBIN}} go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@v2.16.0
      - GOBIN={{.GOBIN}} go install github.com/planetscale/vtprotobuf/cmd/protoc-gen-go-vtproto@v0.6.0
      - GOBIN={{.GOBIN}} go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28.1
      - GOBIN={{.GOBIN}} go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2.0
      - GOBIN={{.GOBIN}} go install github.com/bufbuild/buf/cmd/buf@v1.33.0

      # catalystgo
      - GOBIN={{.GOBIN}} go install github.com/catalystgo/cli/cmd/catalystgo@v1.0.4
      - GOBIN={{.GOBIN}} go install github.com/catalystgo/cli/cmd/protoc-gen-catalystgo@v1.0.1
      - GOBIN={{.GOBIN}} go install github.com/catalystgo/protosync@v0.0.3

      # tools
      - GOBIN={{.GOBIN}} go install github.com/pressly/goose/v3/cmd/goose@v3.20.0
      - GOBIN={{.GOBIN}} go install golang.org/x/tools/cmd/goimports@v0.19.0
      - GOBIN={{.GOBIN}} go install github.com/mgechev/revive@v1.3.7
      - GOBIN={{.GOBIN}} go install github.com/google/yamlfmt/cmd/yamlfmt@v0.12.1
      - GOBIN={{.GOBIN}} go install github.com/golang/mock/mockgen@v1.6.0
      - GOBIN={{.GOBIN}} go install github.com/gotesttools/gotestfmt/v2/cmd/gotestfmt@v2.5.0

# docker
  docker-build-dev:
    cmds:
     - docker build --file ./.catalystgo/Dockerfile --tag dekuyo/raft-kv:dev --target dev --no-cache .

  docker-build:
    cmds:
      - docker build --file ./.catalystgo/Dockerfile --tag {{.DOCKER_IMAGE}}:{{.VERSION}} --target production --no-cache .

  docker-push:
    cmds:
      - docker push {{.DOCKER_IMAGE}}:{{.VERSION}}

  docker-release:
    cmds:
      - task: docker-build
      - task: docker-push

# docker-compose

  docker-up-dev:
    cmds:
      - docker compose --file .catalystgo/docker-compose-dev.yml up -d
  docker-down-dev:
    cmds:
      - docker compose --file .catalystgo/docker-compose-dev.yml down

  docker-up:
    cmds:
      - docker compose --file .catalystgo/docker-compose.yml up -d
  docker-down:
    cmds:
      - docker compose --file .catalystgo/docker-compose.yml down

  docker-down-vol:
    cmds:
      - docker volume rm catalystgo_raft_data_1 catalystgo_raft_data_2 catalystgo_raft_data_3 catalystgo_raft_data_4 catalystgo_raft_data_5

# app

  send:
    cmds:
      - ./send.sh {{default 100 .N}} "localhost:7001,localhost:7002,localhost:7003,localhost:7004,localhost:7005"
    silent: true
      
# internal

  go_files:
    desc: "Return all .go files and run .COMMAND on them"
    internal: true
    cmds:
     - find .
        -name "*.go"
        -not -path ./mock
        -exec {{.COMMAND}};
